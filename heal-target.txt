// HEAL

var invLength = character.items.length;

setInterval(handlePots, 250);
setInterval(healTarget, 250);
setInterval(curseTarget, 250);
setInterval(loot, 250);
//setInterval(upgradeItem, 500);
setInterval(sellItem, 500);

// HP/MP POTS
function handlePots() {
    //Heal and restore mana if required
    if (character.hp < 600 && new Date() > parent.next_potion) {
    buy("hpot1",1);
        parent.use('hp');
    }
    if (character.mp < 2000 && new Date() > parent.next_potion) {
    buy("mpot1",1);
        parent.use('mp');
    }
}

// HEAL TARGET
function healTarget() {
	var target = get_player('Paladick');
	if (!target) {
		set_message("No Target");
		return;
	}
	else if (target.hp != target.max_hp) {
		heal(target);
		set_message("Healing");
	}
	else
		set_message("Waiting to Heal");
	
	if (!in_attack_range(target)) {
		move (
			character.real_x + (target.real_x-character.real_x) / 2,
			character.real_y + (target.real_y-character.real_y) / 2
		);
	}
}

// CURSE TARGET OF
var lastcurse;
function curseTarget() {
var target = get_target_of(get_player('Paladick'));
    if(target && (!lastcurse || new Date() - lastcurse > 5000) && !target.cursed) {
		if (!in_attack_range(target)) {
			move (
			character.real_x + (target.real_x-character.real_x) / 2,
			character.real_y + (target.real_y-character.real_y) / 2
			);
		}
		else {
			set_message("Cursing Target");
        	lastcurse = new Date();
        	parent.socket.emit("ability", {name: "curse", id: target.id});
		}
    }
}

// UPGRADE ITEM	
function upgradeItem() {
	var buyScroll0 = false;
	var buyScroll1 = false;
	var invLength = character.items.length;
	
	// CHECK WHOLE INVENTORY
	for (var i = 0; i < invLength; i++) {
		// CHECK FOR ITEM TO UPGRADE
		if (character.items[i] && character.items[i].name == "shield") {
			// CHECK FOR SCROLLS, DO NOT BUY IF ANY EXIST
			for (var j = 0; j < invLength; j++) {
				if (character.items[j] && character.items[j].name == "scroll0") {
					buyScroll0 = false;
					break;
				}
				else buyScroll0 = true;
				
				if (character.items[j] && character.items[j].name == "scroll1") {
					buyScroll1 = false;
					break;
				}
				else buyScroll1 = true;
			}
			// END OF CHECK SCROLLS
			
			// BUY + UPGRADE
			if (character.items[i].level < 4) {
				if (character.gold > 1000) {
					if (buyScroll0 == true) {	
						buy("scroll0", 1);
						// LOOK FOR SCROLL THEN UPGRADE
						for (var k = 0; k < invLength; k++) {
							if (character.items[k] && character.items[k].name == "scroll0")
								upgrade(i, k);
						}
					}
					else {
						for (var k = 0; k < invLength; k++) {
							if (character.items[k] && character.items[k].name == "scroll0")
								upgrade(i, k);
						}
					}
				}
			}
			else if (character.items[i].level == 4 || character.items[i].level < 7) {
				if (character.gold > 50000) {
					if (buyScroll1 == true) {
						buy("scroll1", 1);
						// LOOK FOR SCROLL THEN UPGRADE
						for (var k = 0; k < invLength; k++) {
							if (character.items[k] && character.items[k].name == "scroll1")
								upgrade(i, k);
						}
					}
					else {
						for (var k = 0; k < invLength; k++) {
							if (character.items[k] && character.items[k].name == "scroll1")
								upgrade(i, k);
						}
					}
				}
			}
			// END OF BUY + UPGRADE
		}
	}
}

// SELL ITEM
function sellItem() {
	var invLength = character.items.length;
	for (var i = 0; i < invLength; i++) {
		if (character.items[i] && character.items[i].name == "shield") {
			if (character.items[i].level < 4)
				sell(i);
		}
	}
}
